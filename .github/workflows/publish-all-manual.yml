name: Publish NuGet Package - Client

on:
  workflow_dispatch:

jobs:
  publish:
    if: github.event.pull_request.merged == true 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_version
        run: |
          TAG=$(git tag -l "v*.*.*" | sort -V | tail -n 1)
          if [[ -z "$TAG" ]]; then
            echo "No Git tag found. Please create a version tag before merging the PR."
            exit 1
          fi
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Dotnet Build
        run: dotnet build --configuration Release --no-restore

      - name: Install SSL Certificates
        run: |
          dotnet dev-certs https --clean
          dotnet dev-certs https --trust

      - name: Run Wiremock Integration Tests
        run: |
          dotnet test ./test/AzureKeyVaultEmulator.Wiremock.IntegrationTests/AzureKeyVaultEmulator.Wiremock.IntegrationTests.csproj --no-build

      - name: Run API Integration Tests
        run: |
          dotnet test ./test/AzureKeyVaultEmulator.IntegrationTests/AzureKeyVaultEmulator.IntegrationTests.csproj --no-build

      - name: Run TestContainers Integration Tests
        run: |
          dotnet test ./test/AzureKeyVaultEmulator.TestContainers.Tests/AzureKeyVaultEmulator.TestContainers.Tests.csproj --no-build

      - name: Pack NuGet Package
        run: dotnet pack --configuration Release --no-build --output ./nupkgs /p:Version=${{ env.VERSION }}

      - name: Publish to NuGet
        run: dotnet nuget push ./nupkgs/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate

      - name: Build Docker Image
        run: |
          docker build -t jamesgoulddev/azure-keyvault-emulator:latest -t jamesgoulddev/azure-keyvault-emulator:${{ env.VERSION }} .

      - name: Push Versioned Docker Image
        run: |
          docker push jamesgoulddev/azure-keyvault-emulator:Latest

      - name: Push Versioned Docker Image
        run: |
          docker push jamesgoulddev/azure-keyvault-emulator:${{ env.VERSION }}          